# RefinerAgent 簡素化提案

## 目的
RefinerAgentを簡素化し、OpenAI APIのみを使用して最小限の機能セットで実装する。

## 提案内容

### 1. Grammarly API依存の削除
- GrammarlyAPIに関連するコードを完全に削除
- プルーフリーディング機能はOpenAI APIのみで実装
- 環境変数`GRAMMARLY_API_KEY`の参照を削除

### 2. OpenAI API利用の最適化
- プルーフリーディングはすべてOpenAI APIで行う
- 単純なプロンプトテンプレートの使用（日本語/英語対応）
- エラーハンドリングの簡素化

### 3. 最小限の機能セット
- 色コントラスト分析
- 見出し構造の検証
- 画像アクセシビリティ（alt属性）
- 基本的なキーボードアクセシビリティ
- テキストプルーフリーディング
- WCAG 2.1 AA基準への対応

### 4. 実装の簡素化
- 複雑なエラーハンドリングの簡素化


## 利点
- 依存関係の削減
- コードの可読性向上
- メンテナンス性の向上
- 信頼性の向上（外部APIへの依存減少）
- インストールと設定の簡素化

## 実装計画
1. Grammarly API関連コードの削除
2. OpenAI APIを使用したシンプルなプルーフリーディング実装
3. エラーハンドリングの簡素化
4. 最小限のTailwindカラーマッピング実装
5. テストケースの更新

## まとめ
RefinerAgentを簡素化し、OpenAI APIのみを使用することで、メンテナンス性が高く、信頼性のある実装を実現する。WCAG 2.1 AA基準への対応を維持しながら、コードの複雑さを低減する。 